# MonoDevelop seems to set PKG_CONFIG_LIBDIR to the empty string, which is bad
# for us because that eliminates most packages, including Geckofx-Core.
# If PKG_CONFIG_LIBDIR is not set at all, then the default paths are searched.
# To be safe, we'll preserve the old value (if it is set) and restore it.
if [ "${PKG_CONFIG_LIBDIR+set}" = set ]; then
	OLD_PKG_CONFIG_LIBDIR="${PKG_CONFIG_LIBDIR}"
	unset PKG_CONFIG_LIBDIR
fi
# search for xulrunner-14*, select the latest, and add its location to LD_LIBRARY_PATH
# also define LD_PRELOAD to get geckofix.so to work properly
# (the search order must be the same as in Geckfx-Core/XULRunnerLocator.cs)

if [ "${RUNMODE-}" = "INSTALLED" ]
then
	XULRUNNER="${WESAY_PREFIX}/lib/wesay/Firefox"
	GECKOFX="${WESAY_PREFIX}/lib/wesay/Firefox"
	MOZ_PATH="${WESAY_PREFIX}/lib/wesay/Firefox"
else
	XULRUNNER=${BASE}/output/${BUILD}/Firefox
	GECKOFX=${BASE}/output/${BUILD}/Firefox
	MOZ_PATH=${BASE}/output/${BUILD}/Firefox
fi

if [ ! -d ${XULRUNNER-} ]; then XULRUNNER=/usr/lib/xulrunner-29; fi
LD_LIBRARY_PATH="${XULRUNNER-}:${LD_LIBRARY_PATH-}"
#GECKOFX="$(pkg-config --variable assemblies_dir Geckofx-Core)"

if [ "${RUNMODE-}" != "BUILDINGPACKAGE" ]
then
	if [[ -f "${GECKOFX}/libgeckofix.so" ]]; then
		LD_PRELOAD="${GECKOFX}/libgeckofix.so"
	else
		echo "Warning: Not setting libgeckofix.so to preload since not found."
	fi
fi

export MOZ_PATH

if [ "${OLD_PKG_CONFIG_LIBDIR+set}" = set ]; then
	export PKG_CONFIG_LIBDIR="${OLD_PKG_CONFIG_LIBDIR}"
	unset OLD_PKG_CONFIG_LIBDIR
fi
