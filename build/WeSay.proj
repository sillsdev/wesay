<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build;Pack">
	<PropertyGroup>
		<RootDir Condition="'$(teamcity_build_checkoutDir)' == '' And '$(RootDir)'==''">$(MSBuildProjectDirectory)/..</RootDir>
		<RootDir Condition="'$(teamcity_build_checkoutDir)' != ''">$(teamcity_build_checkoutDir)</RootDir>
		<Solution>Palaso.sln</Solution>
		<SolutionPath>$(RootDir)/$(Solution)</SolutionPath>
		<Configuration Condition="'$(Configuration)'==''">Debug</Configuration>
		<LinuxExcludeCategories Condition="'$(OS)'!='Windows_NT'">KnownMonoIssue,</LinuxExcludeCategories>
		<ExtraExcludeCategories Condition="'$(teamcity_version)' != '' Or '$(JENKINS_URL)' != '' Or '$(CI)' != ''">SkipOnTeamCity,$(LinuxExcludeCategories)</ExtraExcludeCategories>
		<useNUnit-x86 Condition="'$(OS)'=='Windows_NT'">true</useNUnit-x86>
		<Platform Condition="'$(Platform)'==''">x</Platform>
		<useNUnit-x86 Condition="'$(OS)'!='Windows_NT'">false</useNUnit-x86>
		<RestartBuild Condition="!Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll') Or !Exists('$(RootDir)/packages/NUnit.ConsoleRunner/tools/nunit3-console.exe')">true</RestartBuild>
		<RestartBuild Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll') And Exists('$(RootDir)/packages/NUnit.ConsoleRunner/tools/nunit3-console.exe')">false</RestartBuild>
		<ContinuousIntegrationBuild Condition="'$(teamcity_version)' != '' Or '$(JENKINS_URL)' != '' Or '$(CI)' != ''">true</ContinuousIntegrationBuild>
		<ContinuousIntegrationBuild Condition="'$(teamcity_version)' == '' And '$(JENKINS_URL)' == '' And '$(CI)' == ''">false</ContinuousIntegrationBuild>
		<TeamCity Condition="'$(teamcity_version)' != ''">true</TeamCity>
		<TeamCity Condition="'$(teamcity_version)' == ''">false</TeamCity>
		<TestOutputXmlFile Condition="'$(teamcity_version)' == ''">$(RootDir)/output/$(Configuration)/TestResults.xml</TestOutputXmlFile>
		<DeterministicSourcePaths>$(ContinuousIntegrationBuild)</DeterministicSourcePaths>
	</PropertyGroup>

	<UsingTask TaskName="BuildExcludeString" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<Categories ParameterType="System.String" Required="true" />
			<ExcludeArg ParameterType="System.String" Output="true" />
		</ParameterGroup>
		<Task>
		<Code Type="Fragment" Language="cs"><![CDATA[
			var bldr = new StringBuilder();
			foreach (var cat in Categories.Split(new[] { ',', ' ' }, StringSplitOptions.RemoveEmptyEntries))
			{
				bldr.Append("cat != ");
				bldr.Append(cat);
				bldr.Append(" and ");
			}
			bldr.Length = bldr.Length - " and ".Length; // remove final "and"
			bldr.Insert(0, "(").Append(")");
			var exclude = bldr.ToString();
			bldr.Clear();
			bldr.Append(" --where \"");
			bldr.Append(exclude);
			bldr.Append("\"");

			ExcludeArg = bldr.ToString();
		]]></Code>
		</Task>
	</UsingTask>

	<Import Project="NuGet.targets"/>

	<Target Name="RestoreBuildTasks" DependsOnTargets="CheckPrerequisites">
		<Message Text="RestartBuild=$(RestartBuild)" />
		<!-- first remove any existing packages - if they were installed with appended version numbers nuget refuses to install it again, messing up things -->
		<RemoveDir Directories="@(PackageDirs)" />
		<Exec Command='$(NuGetCommand) install SIL.BuildTasks -excludeVersion -version 2.3.1 -solutionDirectory "$(RootDir)"' />
		<!-- Install NUnit.Console which has the required extensions as dependencies -->
		<Exec Command='$(NuGetCommand) install NUnit.Console -excludeVersion -version 3.11.1 -solutionDirectory "$(RootDir)"' />
	</Target>

	<ItemGroup>
		<ExistingObjectFiles
			Include="$(RootDir)/output/$(Configuration)/**/*"
			Exclude="$(RootDir)/.hg/**/*;$(RootDir)/.git/**/*"
		/>
	</ItemGroup>

	<Target Name="Build">
		<MSBuild Projects="$(RootDir)/src/WeSay.sln"
			Properties="Configuration=$(Configuration);RootDir=$(RootDir);Platform=$(Platform)" />
	</Target>

	<Target Name="Test" DependsOnTargets="Build">
		<CallTarget Targets="TestOnly" Condition="!$(RestartBuild)" />
		<MSBuild Projects="$(MSBuildProjectFullPath)" Targets="TestOnly"
			Properties="Configuration=$(Configuration);RootDir=$(RootDir);Platform=$(Platform)"
			Condition="$(RestartBuild)" />
	</Target>

	<Target Name="TestOnly" DependsOnTargets="RestoreBuildTasks">
		<ItemGroup>
			<TestAssemblies Include="$(RootDir)/output/$(Configuration)/*.Tests.dll" Exclude="$(RootDir)/output/$(Configuration)/SIL.*.Tests.dll"/>
		</ItemGroup>
		<Message Text="CI=$(CI) $(RootDir)/packages/NUnit.ConsoleRunner" />
		<BuildExcludeString Categories="$(ExtraExcludeCategories)" Condition="'$(ExtraExcludeCategories)' != ''">
			<Output PropertyName="ExcludeArgument" TaskParameter="ExcludeArg" />
		</BuildExcludeString>
		<Message Text="Exclude Arg = $(ExcludeArgument)" />
		<Exec Command="$(RootDir)/packages/NUnit.ConsoleRunner/tools/nunit3-console.exe @(TestAssemblies->'%(Filename)%(Extension)', ' ')  &quot;--result:$(RootDir)/output/$(Configuration)/TestResults.xml;format=nunit3&quot; --labels=Before --x86 --agents=1 $(ExcludeArgument)"
			WorkingDirectory="$(RootDir)/output/$(Configuration)" />
	</Target>
</Project>
